/**
 * 16-bit bitwise And:
 * for i = 0..15: out[i] = (a[i] and b[i])
 */

CHIP And16 {
    IN a[16], b[16];
    OUT out[16];

    PARTS:
    Nand(a=a[0], b=b[0], out=wire0);
    Not(in=wire0, out=out[0]);

    Nand(a=a[1], b=b[1], out=wire1);
    Not(in=wire1, out=out[1]);

    Nand(a=a[2], b=b[2], out=wire2);
    Not(in=wire2, out=out[2]);

    Nand(a=a[3], b=b[3], out=wire3);
    Not(in=wire3, out=out[3]);

    Nand(a=a[4], b=b[4], out=wire4);
    Not(in=wire4, out=out[4]);

    Nand(a=a[5], b=b[5], out=wire5);
    Not(in=wire5, out=out[5]);

    Nand(a=a[6], b=b[6], out=wire6);
    Not(in=wire6, out=out[6]);

    Nand(a=a[7], b=b[7], out=wire7);
    Not(in=wire7, out=out[7]);

    Nand(a=a[8], b=b[8], out=wire8);
    Not(in=wire8, out=out[8]);

    Nand(a=a[9], b=b[9], out=wire9);
    Not(in=wire9, out=out[9]);

    Nand(a=a[10], b=b[10], out=wire10);
    Not(in=wire10, out=out[10]);

    Nand(a=a[11], b=b[11], out=wire11);
    Not(in=wire11, out=out[11]);

    Nand(a=a[12], b=b[12], out=wire12);
    Not(in=wire12, out=out[12]);

    Nand(a=a[13], b=b[13], out=wire13);
    Not(in=wire13, out=out[13]);

    Nand(a=a[14], b=b[14], out=wire14);
    Not(in=wire14, out=out[14]);

    Nand(a=a[15], b=b[15], out=wire15);
    Not(in=wire15, out=out[15]);
}